name: CI

on:
  push:
    branches: [ main, development ]
    paths:
      - 'services/product-service/**'
  pull_request:
    branches: [ main, development ]
    paths:
      - 'services/product-service/**'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: services/product-service/package-lock.json
      - name: Install dependencies
        working-directory: services/product-service
        run: npm install
      - name: Run linting
        working-directory: services/product-service
        run: npm run lint || true

  test:
    runs-on: ubuntu-latest
    needs: lint
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: services/product-service/package-lock.json
      - name: Install dependencies
        working-directory: services/product-service
        run: npm install
      - name: Run tests
        working-directory: services/product-service
        run: npm test
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://localhost:27017/test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: services/product-service
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/product-service:${{ github.sha }}
          target: production

  deploy-dev:
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    needs: build
    environment: development
    steps:
      - name: Deploy to development
        run: |
          echo "Deploying product service to development environment"
          # Ajoutez ici les commandes de déploiement

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    environment: production
    steps:
      - name: Deploy to production
        run: |
          echo "Deploying product service to production environment"
          # Ajoutez ici les commandes de déploiement
