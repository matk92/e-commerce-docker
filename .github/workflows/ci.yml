name: CI

on:
  push:
    branches: [ main, development ]
    paths:
      - 'services/product-service/**'
  pull_request:
    branches: [ main, development ]
    paths:
      - 'services/product-service/**'
  workflow_dispatch:

permissions:
  packages: write
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            services/product-service/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('services/product-service/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        working-directory: services/product-service
        run: npm install
      - name: Run linting
        working-directory: services/product-service
        run: npm run lint || true

  test:
    runs-on: ubuntu-latest
    needs: lint
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            services/product-service/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('services/product-service/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        working-directory: services/product-service
        run: npm install
      - name: Run tests
        working-directory: services/product-service
        run: npm test
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://localhost:27017/test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: deathfal
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: services/product-service
          push: true
          tags: ghcr.io/deathfal/e-commerce-product-service:latest
          target: production
